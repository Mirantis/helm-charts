apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "cloud-controller-manager.name" . }}
  labels:
    component: {{ template "cloud-controller-manager.name" . }}
    {{- include "gcp-ccm.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      component: {{ template "cloud-controller-manager.name" . }}
      {{- include "gcp-ccm.selectorLabels" . | nindent 6 }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      {{- if .Values.podAnnotations }}
      annotations:
      {{- toYaml .Values.podAnnotations | nindent 8 }}
      {{- end }}
      labels:
        tier: control-plane
        component: {{ template "cloud-controller-manager.name" . }}
        {{- include "gcp-ccm.selectorLabels" . | nindent 8 }}
    spec:
      tolerations: {{ toYaml ( .Values.tolerations | default .Values.tolerations ) | nindent 8 }}
      nodeSelector: {{ toYaml ( .Values.nodeSelector | default .Values.nodeSelector ) | nindent 8 }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      priorityClassName: system-cluster-critical
      serviceAccountName: {{ .Values.serviceAccountName }}
      hostNetwork: true
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: cloud-controller-manager
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- $args := .Values.args }}
          {{- if and (.Values.cloudConfig.enabled) (not (contains  "--cloud-config" (cat $args))) }}
          {{- $args = append $args "--cloud-config=/etc/kubernetes/cloud-config" }}
          {{- end }}
          {{- if not (has "--cluster-cidr" $args) }}
          {{- $args = append $args (printf "--cluster-cidr=%s" .Values.clusterCIDR) }}
          {{- end }}
          args:
            {{- range $args }}
            - {{ . }}
            {{- end }}
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/kubernetes/{{ .Values.cloudCredentials.secretKey }}
          securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: {{ .Values.securePort }}
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          volumeMounts:
            - name: gcp-cloud-credentials
              mountPath: /etc/kubernetes/{{ .Values.cloudCredentials.secretKey }}
              subPath: {{ .Values.cloudCredentials.secretKey }}
            {{- if .Values.cloudConfig.enabled }}
            - name: gcp-cloud-config
              mountPath: /etc/kubernetes/cloud-config
              subPath: cloud-config
            {{- end }}
          {{- with .Values.extraVolumeMounts }}
          {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: gcp-cloud-credentials
          secret:
            secretName: {{ .Values.cloudCredentials.secretName }}
        {{- if .Values.cloudConfig.enabled  }}
        - name: gcp-cloud-config
          secret:
            secretName: {{ include "cloud-config-secret.name" . }}
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
