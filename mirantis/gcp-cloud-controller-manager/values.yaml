args:
  - --cloud-provider=gce
  - --leader-elect=true
  - --use-service-account-credentials=true
  - --allocate-node-cidrs=true
  - --configure-cloud-routes=true
  - --v=2

clusterCIDR: 192.168.0.0/16

image:
  pullPolicy: IfNotPresent
  repository: gcr.io/k8s-staging-cloud-provider-gcp/cloud-controller-manager
  tag: v32.2.3

# nameOverride overrides `cloud-controller-manager.fullname`
nameOverride: "gcp-cloud-controller-manager"

# nodeSelector -- Node labels for pod assignment. Ref: https://kubernetes.io/docs/user-guide/node-selection/.
nodeSelector: null

# resources -- Pod resource requests and limits.
resources:
  # limits:
  #   cpu: 100m
  #   memory: 300Mi
  requests:
    cpu: 200m
  #   memory: 300Mi

# securityContext -- Container Security Context.
securityContext: {}
# podSecurityContext -- Pods Security Context.
podSecurityContext: {}

# podAnnotations -- Pods Annotations.
podAnnotations: {}

# tolerations -- List of node taints to tolerate (requires Kubernetes >= 1.6).
tolerations:
- key: node.cloudprovider.kubernetes.io/uninitialized
  value: "true"
  effect: NoSchedule
- key: node.kubernetes.io/not-ready
  effect: NoSchedule
- key: node-role.kubernetes.io/master
  effect: NoSchedule
- key: node-role.kubernetes.io/control-plane
  effect: NoSchedule

# dnsPolicy -- dnsPolicy of deamonset pods. Should be set to Default if deployed as a deamonset on control-plane nodes to resolve properly
dnsPolicy: Default

serviceAccountName: cloud-controller-manager

extraVolumes: []
extraVolumeMounts: []

securePort: 10258

cloudConfig:
  enabled: false
  data: Cg== # base64-encoded cloud config

cloudCredentials:
  secretName: gcp-cloud-sa
  secretKey: cloud-sa.json
